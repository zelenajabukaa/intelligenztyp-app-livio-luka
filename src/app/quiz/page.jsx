"use client";
import { useRouter } from "next/navigation";
import React, { useState } from "react";

// Fragenkatalog
const fragenKatalog = [
    {
        typ: "Linguistische Intelligenz",// Intelligenztyp oder auch der Titel des Katalogs
        icon: "üìù",// ein Kleines Icon, damit es sch√∂ner f√ºr die Augen ist
        fragen: [
            "Ich kann meine Gedanken klar und verst√§ndlich in Worten ausdr√ºcken.",
            "Ich lese gerne B√ºcher, Artikel oder Texte in meiner Freizeit.",
            "Beim Erkl√§ren komplexer Sachverhalte finde ich schnell die richtigen Worte.",
            "Ich merke mir Zitate, Gedichte oder Textpassagen leicht.",
        ],
    },
    {
        typ: "Logisch-Mathematische Intelligenz",
        icon: "üî¢",
        fragen: [
            "Ich l√∂se gerne R√§tsel, Sudokus oder logische Aufgaben.",
            "Mathematische Probleme kann ich oft im Kopf durchrechnen.",
            "Ich erkenne schnell Muster und Zusammenh√§nge in Zahlen oder Daten.",
            "Bei Entscheidungen w√§ge ich systematisch Pro und Contra ab.",
        ],
    },
    {
        typ: "R√§umliche Intelligenz",
        icon: "üó∫Ô∏è",
        fragen: [
            "Ich kann mir dreidimensionale Objekte gut im Kopf vorstellen und drehen.",
            "Landkarten und Wegbeschreibungen verstehe ich auf Anhieb.",
            "Beim Zusammenbauen von M√∂beln brauche ich selten die Anleitung.",
            "Ich zeichne oder skizziere gerne zur Veranschaulichung von Ideen.",
        ],
    },
    {
        typ: "K√∂rperlich-Kin√§sthetische Intelligenz",
        icon: "ü§∏",
        fragen: [
            "Neue Bewegungsabl√§ufe beim Sport lerne ich schnell.",
            "Ich gestikuliere oft mit den H√§nden, wenn ich spreche.",
            "Handwerkliche T√§tigkeiten fallen mir leicht.",
            "Ich muss Dinge anfassen und ausprobieren, um sie zu verstehen.",
        ],
    },
    {
        typ: "Musikalische Intelligenz",
        icon: "üéµ",
        fragen: [
            "Ich erkenne sofort, wenn jemand falsch singt oder ein Instrument verstimmt ist.",
            "Melodien pr√§gen sich mir schnell ein und ich summe oft vor mich hin.",
            "Ich kann den Rhythmus von Musik gut mit dem K√∂rper nachahmen.",
            "Musik beeinflusst meine Stimmung und Konzentration stark.",
        ],
    },
    {
        typ: "Interpersonelle Intelligenz",
        icon: "ü§ù",
        fragen: [
            "Ich merke schnell, wenn sich die Stimmung einer Person √§ndert.",
            "In Gruppendiskussionen √ºbernehme ich oft die Moderatorenrolle.",
            "Menschen vertrauen mir ihre Probleme und Sorgen an.",
            "Ich kann gut einsch√§tzen, wie meine Worte bei anderen ankommen.",
        ],
    },
    {
        typ: "Intrapersonelle Intelligenz",
        icon: "üß†",
        fragen: [
            "Ich reflektiere regelm√§ssig √ºber meine Ziele und Motivationen.",
            "Meine St√§rken und Schw√§chen kenne ich sehr gut.",
            "Ich brauche regelm√§ssig Zeit f√ºr mich allein zum Nachdenken.",
            "Bei wichtigen Entscheidungen h√∂re ich auf mein Bauchgef√ºhl.",
        ],
    },
    {
        typ: "Naturalistische Intelligenz",
        icon: "üå±",
        fragen: [
            "Ich erkenne verschiedene Pflanzen- und Tierarten leicht.",
            "Wetterver√§nderungen sp√ºre ich oft schon fr√ºh.",
            "In der Natur f√ºhle ich mich besonders wohl und entspannt.",
            "Umweltthemen und Nachhaltigkeit sind mir sehr wichtig.",
        ],
    },
];

//Diese Funktion berechnet den Fortschritt in %, also 56% z.B
function getProgress(step, totalSteps) {
    return Math.round((step / totalSteps) * 100);
}

export default function QuizPage() {
    const router = useRouter();
    const [step, setStep] = useState(0);//Speichert bei welchem Schritt man gerade ist (z.B Schritt 3 von 8).
    const [answers, setAnswers] = useState(
        Array(8)//es gibt 8 Gruppen mit je 4 Antworten (also 8x4 Felder).
            .fill(0)
            .map(() => Array(4).fill(3))
    );

    const current = fragenKatalog[step];// Aktuelle Frage
    const currentAnswers = answers[step];// Aktuelle Antwort

    // wird aufgerufen, wenn bei einem Radiobutton Antwort ge√§ndert wird -- er speichert die Antwort
    function handleRadioChange(qIdx, value) {
        const copy = answers.map((arr) => arr.slice());
        copy[step][qIdx] = value;
        setAnswers(copy);
    }

    //geht zum n√§chsten Schritt/Seite, solange noch nicht alle fertig sind.
    function handleNext() {
        if (step < 7) {
            setStep(step + 1);
        } else {
            router.push(
                "/ergebnis?data=" + encodeURIComponent(JSON.stringify(answers))
            );//beim letzten Schritt geht es zur Ergebnis Seite
        }
    }
    function handleBack() {//geht einen Schritt zur√ºck
        if (step > 0) setStep(step - 1);
    }

    const progress = getProgress(step + 1, 8);//zeigz den Fortschritt in % an

    return (
        <div className="quiz-container">
            <div className="progress-row">// Fortschritt wird hier angezeigt
                <div className="progress-bar">
                    <div className="progress" style={{ width: `${progress}%` }} />
                </div>
                <span className="schritt">Schritt {step + 1}/8</span>
            </div>
            <div className="kategorie">
                <span style={{ fontSize: 28 }}>{current.icon}</span> {current.typ}//zeigt das Icon und den Namen des aktuellen Intelligenztyps (Beispiel: üß† Sprachlich).


            </div>
            <div className="fragenblock">// Frage mit 5 Antworten, man kann nur eine ausw√§hlen
                {current.fragen.map((frage, qIdx) => (
                    <div key={qIdx} className="frage-block">
                        <div className="frage-text">{frage}</div>
                        <div className="radio-row">
                            {[1, 2, 3, 4, 5].map((val) => (
                                <label key={val} className="radio-label">
                                    <input
                                        type="radio"
                                        name={`frage${qIdx}`}
                                        checked={currentAnswers[qIdx] === val}
                                        onChange={() => handleRadioChange(qIdx, val)}
                                    />
                                    <span>
                                        {[
                                            "Trifft gar nicht zu",
                                            "Trifft wenig zu",
                                            "Trifft teilweise zu",
                                            "Trifft gr√∂√ütenteils zu",
                                            "Trifft vollst√§ndig zu",
                                        ][val - 1]}
                                    </span>
                                </label>
                            ))}
                        </div>
                    </div>
                ))}
            </div>
            <div className="button-row">
                <button onClick={handleBack} disabled={step === 0}>//Button zum zur√ºckgehen
                    Zur√ºck
                </button>
                <button onClick={handleNext}>//Button zum weitergehen
                    {step < 7 ? "Weiter" : "Fertig"}
                </button>
            </div>
            <style jsx>{`
        .quiz-container {
          max-width: 480px;
          margin: 40px auto;
          padding: 32px 20px;
          background: #fff;
          border-radius: 16px;
          box-shadow: 0 2px 16px rgba(0,0,0,0.08);
        }
        .progress-row {
          display: flex;
          align-items: center;
          gap: 12px;
          margin-bottom: 18px;
        }
        .progress-bar {
          flex: 1;
          height: 12px;
          background: #f3f4f6;
          border-radius: 6px;
          overflow: hidden;
        }
        .progress {
          height: 100%;
          background: #3B82F6;
          transition: width 0.3s;
        }
        .schritt {
          font-size: 1rem;
          color: #888;
          min-width: 80px;
          text-align: right;
        }
        .kategorie {
          font-size: 1.2rem;
          font-weight: bold;
          margin: 18px 0 8px 0;
          display: flex;
          align-items: center;
          gap: 8px;
        }
        .fragenblock {
          margin-bottom: 20px;
        }
        .frage-block {
          margin-bottom: 18px;
        }
        .frage-text {
          margin-bottom: 8px;
        }
        .radio-row {
          display: flex;
          flex-direction: column;
          gap: 4px;
        }
        .radio-label {
          font-size: 1rem;
          display: flex;
          align-items: center;
          gap: 8px;
          cursor: pointer;
        }
        .button-row {
          display: flex;
          justify-content: space-between;
          gap: 12px;
        }
        button {
          flex: 1;
          padding: 12px 0;
          font-size: 1rem;
          border: none;
          border-radius: 6px;
          background: #f3f4f6;
          color: #333;
          cursor: pointer;
          transition: background 0.2s;
        }
        button:disabled {
          background: #eee;
          color: #bbb;
          cursor: not-allowed;
        }
        button:last-child {
          background: #3B82F6;
          color: #fff;
        }
        button:last-child:hover:not(:disabled) {
          background: #2563eb;
        }
      `}</style>
        </div>
    );
}
